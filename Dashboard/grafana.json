{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 4,
    "links": [],
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 44,
        "panels": [],
        "title": " ",
        "type": "row"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "ddveb1767h4hsa"
        },
        "gridPos": {
          "h": 3,
          "w": 6,
          "x": 0,
          "y": 1
        },
        "id": 11,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<img src=\"https://github.com/ssangmin-junior/softeer_wiki/blob/main/files/HyunDE.png?raw=true\" alt=\"Google Drive Image\">",
          "mode": "html"
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "ddveb1767h4hsa"
            },
            "editorMode": "builder",
            "format": "table",
            "rawSql": "",
            "refId": "A"
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "ddveb1767h4hsa"
        },
        "gridPos": {
          "h": 4,
          "w": 10,
          "x": 7,
          "y": 1
        },
        "id": 34,
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<img src=\"https://github.com/ssangmin-junior/softeer_wiki/blob/main/files/logogo.png?raw=true\" alt=\"Google Drive Image\">",
          "mode": "html"
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "ddveb1767h4hsa"
            },
            "editorMode": "builder",
            "format": "table",
            "rawSql": "",
            "refId": "A"
          }
        ],
        "transparent": true,
        "type": "text"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 20,
          "y": 1
        },
        "id": 40,
        "options": {
          "bgColor": "",
          "clockType": "24 hour",
          "countdownSettings": {
            "endCountdownTime": "2024-08-25T09:28:11+09:00",
            "endText": "00:00:00",
            "invalidValueText": "invalid value",
            "noValueText": "no value found",
            "queryCalculation": "last",
            "source": "input"
          },
          "countupSettings": {
            "beginCountupTime": "2024-08-25T09:28:11+09:00",
            "beginText": "00:00:00",
            "invalidValueText": "invalid value",
            "noValueText": "no value found",
            "queryCalculation": "last",
            "source": "input"
          },
          "dateSettings": {
            "dateFormat": "YYYY-MM-DD",
            "fontSize": "20px",
            "fontWeight": "normal",
            "locale": "",
            "showDate": true
          },
          "descriptionSettings": {
            "descriptionText": "",
            "fontSize": "12px",
            "fontWeight": "normal",
            "noValueText": "no description found",
            "source": "none"
          },
          "fontMono": true,
          "mode": "time",
          "refresh": "sec",
          "timeSettings": {
            "fontSize": "12px",
            "fontWeight": "normal"
          },
          "timezone": "",
          "timezoneSettings": {
            "fontSize": "12px",
            "fontWeight": "normal",
            "showTimezone": false,
            "zoneFormat": "offsetAbbv"
          }
        },
        "pluginVersion": "2.1.7",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "builder",
            "format": "table",
            "rawSql": "SELECT * FROM Dashboard.Scores LIMIT 50 ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "*",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "Scores"
          }
        ],
        "transparent": true,
        "type": "grafana-clock-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 5
        },
        "id": 42,
        "panels": [],
        "title": "\bLive",
        "type": "row"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Title"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Content"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byName",
                "options": "URL"
              },
              "properties": []
            }
          ]
        },
        "gridPos": {
          "h": 11,
          "w": 11,
          "x": 0,
          "y": 6
        },
        "id": 15,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto"
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = context.panel.data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n\n  return {\n    name: s.refId,\n    type: 'line',\n    showSymbol: false,\n    smooth: true, // 선을 매끄럽게 곡선으로 만듦\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 2,  // 선의 두께를 조금 더 두껍게 설정\n      cap: 'round',  // 선의 끝을 둥글게 만듦\n      join: 'round', // 라인 연결 부분을 둥글게 만듦\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n  };\n});\n\n// Calculate 24-hour range from the latest time in the series\nconst endTime = Math.max(...series[0].data.map(d => d[0]));\nconst startTime = endTime - 24 * 60 * 60 * 1000; // 24 hours in milliseconds\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: context.panel.data.series.map((s) => s.refId),\n    textStyle: {\n      color: '#dcdcdc',  // 밝은 글자색\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n    min: startTime, // Start time 24 hours before the end time\n    max: endTime,   // End time\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n    axisLabel: {\n      color: '#dcdcdc'  // 밝은 글자색\n    }\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  dataZoom: [\n    {\n      type: 'inside',\n      start: 0,\n      end: 100,\n      minValueSpan: 24 * 60 * 60 * 1000, // Keep zoom level fixed to 24 hours\n      maxValueSpan: 24 * 60 * 60 * 1000, // Keep zoom level fixed to 24 hours\n    },\n    {\n      type: 'slider',\n      start: 0,\n      end: 100,\n      minValueSpan: 24 * 60 * 60 * 1000,\n      maxValueSpan: 24 * 60 * 60 * 1000,\n      textStyle: {\n        color: '#dcdcdc'  // 밝은 글자색\n      }\n    },\n  ],\n  series,\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [],
            "series": []
          }
        },
        "pluginVersion": "6.2.0",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "queryText": "SELECT UNIX_TIMESTAMP(DateTime) as time, score FROM score_df WHERE CarName = '투싼' ORDER BY DateTime;",
            "queryType": "time series",
            "rawQuery": true,
            "rawQueryText": "SELECT UNIX_TIMESTAMP(DateTime) as time, score FROM score_df WHERE CarName = '투싼' ORDER BY DateTime;",
            "rawSql": "SELECT UNIX_TIMESTAMP(CONVERT_TZ(DateTime, '+09:00', 'SYSTEM')) as time, IncreaseScore FROM Dashboard.IncreaseScoreTable LIMIT 50 ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "DateTime",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "IncreaseScore",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "id": "a8abb9bb-0123-4456-b89a-b1917956189d",
                "type": "group"
              }
            },
            "table": "IncreaseScoreTable",
            "timeColumns": [
              "time",
              "ts"
            ]
          }
        ],
        "timeFrom": "now-24h",
        "title": "Live Watch",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Increase"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 33
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "DateTime"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 163
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Content"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 389
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Title"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 262
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 4,
          "w": 12,
          "x": 11,
          "y": 6
        },
        "id": 14,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT Title,Content,URL FROM Dashboard.MostIncreasingPostTable ORDER BY DateTime DESC LIMIT 1;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "Content",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            },
            "table": "MostIncreasingPostTable"
          }
        ],
        "title": "Most Increasing Post",
        "transparent": true,
        "type": "table"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "transparent",
              "mode": "fixed"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "fieldMinMax": false,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Title"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "transparent",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "custom.width",
                  "value": 189
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Content"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "transparent",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "custom.width",
                  "value": 693
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "URL"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "transparent",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 11,
          "y": 10
        },
        "id": 33,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT Content, URL FROM Dashboard.NewContentHavingKeywordTable\nWHERE DateTime IN (SELECT DateTime FROM Dashboard.IncreaseScoreTable ORDER BY Datetime DESC);",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Contents having Keywords",
        "transparent": true,
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 17
        },
        "id": 41,
        "panels": [],
        "title": "Similar Case",
        "type": "row"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Date"
              },
              "properties": [
                {
                  "id": "links",
                  "value": [
                    {
                      "title": "",
                      "url": "http://52.78.34.66:3000/d/edvnx5lruhi4gc/?var-selectedDate=${__value.raw}"
                    }
                  ]
                },
                {
                  "id": "custom.width",
                  "value": 131
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Vehicle"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 113
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 9,
          "w": 9,
          "x": 0,
          "y": 18
        },
        "id": 38,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT \n    s.SimilarCar as Vehicle,\n    DATE_FORMAT(s.SimilarDate, '%Y-%m-%d') AS Date,\n    s.Similarity,\n    i.DeviceCategory as Defect,\n    i.TargetQuantity as Quantity\nFROM \n    Dashboard.Similarity s\nLEFT JOIN \n    Dashboard.Issues i\nON \n    s.SimilarCar = i.CarName\nAND \n    s.SimilarDate = i.Date\nORDER BY \n    i.DeviceCategory IS NULL,  -- Defect가 NULL인 행을 뒤로 배치\n    s.Similarity DESC           -- Similarity 값에 따라 내림차순 정렬\nLIMIT 50;\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Similarity",
        "transparent": true,
        "type": "table"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "fieldConfig": {
          "defaults": {},
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "closest_issue_time"
              },
              "properties": []
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Score"
              },
              "properties": []
            }
          ]
        },
        "gridPos": {
          "h": 9,
          "w": 14,
          "x": 9,
          "y": 18
        },
        "id": 39,
        "options": {
          "baidu": {
            "callback": "bmapReady",
            "key": ""
          },
          "editor": {
            "format": "auto"
          },
          "editorMode": "code",
          "gaode": {
            "key": "",
            "plugin": "AMap.Scale,AMap.ToolBar"
          },
          "getOption": "const series = context.panel.data.series.map((s) => {\n  const sData = s.fields.find((f) => f.type === 'number').values.buffer || s.fields.find((f) => f.type === 'number').values;\n  const sTime = s.fields.find((f) => f.type === 'time').values.buffer || s.fields.find((f) => f.type === 'time').values;\n  const carName = s.fields.find((f) => f.name === 'CarName').values.get(0);\n\n  // ClosestIssueDate와 일치하는 시점을 찾기 위한 데이터 전처리\n  const closestIssueDate = context.panel.data.series.find((s) => s.refId === 'B')\n    ?.fields.find((f) => f.name === 'ClosestIssueDate')\n    ?.values.get(0);\n\n  const closestIssueTimestamp = closestIssueDate ? new Date(closestIssueDate).getTime() : null;\n\n  return {\n    name: carName,\n    type: 'line',\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0.1,\n    },\n    lineStyle: {\n      width: 1,\n      color: carName.includes('투싼') ? 'blue' : 'green',\n    },\n    data: sData.map((d, i) => [sTime[i], d.toFixed(2)]),\n\n    // X 표시 추가 (markPoint)\n    markPoint: {\n      data: closestIssueTimestamp && sData.some((d, i) => sTime[i] === closestIssueTimestamp) ? [{\n        coord: [closestIssueTimestamp, sData.find((d, i) => sTime[i] === closestIssueTimestamp)],\n        symbol: 'circle',\n        symbolSize: 10,\n        label: {\n          show: true,\n          formatter: 'X',\n          color: 'red'\n        },\n        itemStyle: {\n          color: 'red'\n        }\n      }] : []\n    },\n\n    // 세로선 추가 (markLine)\n    markLine: {\n      data: closestIssueTimestamp ? [\n        {\n          xAxis: closestIssueTimestamp,\n          lineStyle: {\n            color: 'red',\n            width: 2,\n            type: 'solid'\n          },\n          label: {\n            show: true,\n            formatter: 'Closest Issue',\n            position: 'end',\n            color: 'red'\n          }\n        }\n      ] : []\n    }\n  };\n});\n\nreturn {\n  backgroundColor: 'transparent',\n  tooltip: {\n    trigger: 'axis',\n  },\n  legend: {\n    left: '0',\n    bottom: '0',\n    data: series.map((s) => s.name),\n    textStyle: {\n      color: 'rgba(128, 128, 128, .9)',\n    },\n  },\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n        icon: {\n          zoom: 'path://',\n          back: 'path://',\n        },\n      },\n      saveAsImage: {},\n    }\n  },\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n  grid: {\n    left: '2%',\n    right: '2%',\n    top: '2%',\n    bottom: 24,\n    containLabel: true,\n  },\n  series,\n  visualMap: [\n    {\n      show: false,\n      seriesIndex: 0,\n      dimension: 1,\n      pieces: [\n        {\n          gt: 0,\n          lte: 40,\n          color: 'blue',\n        },\n        {\n          gt: 40,\n          color: 'red',\n        },\n      ],\n    },\n    {\n      show: false,\n      seriesIndex: 1,\n      dimension: 1,\n      pieces: [\n        {\n          gt: 0,\n          lte: 40,\n          color: 'green',\n        },\n        {\n          gt: 40,\n          color: 'red',\n        },\n      ],\n    },\n  ],\n  onClick: function (params) {\n    if (params.componentType === 'series') {\n      const dateValue = new Date(params.value[0]).toISOString();\n      context.variables.set('linkDate', dateValue);\n    }\n  }\n};\n",
          "google": {
            "callback": "gmapReady",
            "key": ""
          },
          "map": "none",
          "renderer": "canvas",
          "themeEditor": {
            "config": "{}",
            "name": "default"
          },
          "visualEditor": {
            "code": "return {\n  dataset: context.editor.dataset,\n  series: context.editor.series,\n  xAxis: {\n    type: 'time',\n  },\n  yAxis: {\n    type: 'value',\n    min: 'dataMin',\n  },\n}\n",
            "dataset": [
              {
                "name": "closest_issue_time",
                "source": "B"
              },
              {
                "name": "time",
                "source": "B"
              }
            ],
            "series": []
          }
        },
        "pluginVersion": "6.2.0",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "WITH AlignedData AS (\n    SELECT\n        GREATEST(\n            (SELECT MIN(Date) FROM TucsonScores WHERE CarName = '투싼'),\n            (SELECT MIN(Date) FROM Scores WHERE CarName = (SELECT SimilarCar FROM Similarity WHERE BaseCar = '투싼' ORDER BY Similarity DESC LIMIT 1))\n        ) AS AlignDate\n)\n\nSELECT\n    UNIX_TIMESTAMP(ts.Date) AS time,\n    ts.CarName,\n    ts.Score\nFROM\n    TucsonScores ts\nWHERE\n    ts.CarName = '투싼'\n    AND ts.Date >= (SELECT AlignDate FROM AlignedData)\nORDER BY\n    ts.Date ASC;",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "hide": false,
            "rawQuery": true,
            "rawSql": "WITH SimilarCar AS (\n    SELECT\n        SimilarCar,\n        SimilarDate,\n        ClosestIssueDate,  -- ClosestIssueDate를 정확히 참조\n        DATE_SUB(SimilarDate, INTERVAL 7 DAY) AS StartDate,\n        DATE_ADD(SimilarDate, INTERVAL 7 DAY) AS EndDate\n    FROM\n        Similarity\n    WHERE\n        BaseCar = '투싼'\n        AND SimilarDate = '$selectedDate'  -- 선택된 날짜를 변수로 사용\n    ORDER BY\n        Similarity DESC\n    LIMIT 1\n), AlignedData AS (\n    SELECT\n        MIN(Date) AS BaseStartDate,\n        MAX(Date) AS BaseEndDate\n    FROM\n        TucsonScores\n    WHERE\n        CarName = '투싼'\n), DateDiffs AS (\n    SELECT\n        DATEDIFF(AlignedData.BaseStartDate, SimilarCar.StartDate) AS DateShift\n    FROM\n        SimilarCar,\n        AlignedData\n)\n\nSELECT\n    UNIX_TIMESTAMP(DATE_ADD(s.Date, INTERVAL DateDiffs.DateShift DAY)) AS time,\n    s.CarName,\n    s.Score,\n    DATE_FORMAT(DATE_ADD(sim.ClosestIssueDate, INTERVAL DateDiffs.DateShift DAY), '%Y-%m-%d %H:%i:%s') AS closest_issue_time  -- ClosestIssueDate를 이동된 날짜에 맞춰서 변경\nFROM\n    Scores s\nJOIN\n    SimilarCar sim\n    ON s.CarName = sim.SimilarCar\nJOIN\n    DateDiffs\nWHERE\n    s.Date BETWEEN sim.StartDate AND sim.EndDate\nORDER BY\n    s.Date ASC;\n",
            "refId": "B",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Similar Graph",
        "transparent": true,
        "type": "volkovlabs-echarts-panel"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 27
        },
        "id": 36,
        "panels": [],
        "title": "Base",
        "type": "row"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "auto",
              "cellOptions": {
                "type": "auto"
              },
              "inspect": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "time"
              },
              "properties": [
                {
                  "id": "links",
                  "value": [
                    {
                      "title": "",
                      "url": "http://52.78.34.66:3000/d/edvnx5lruhi4gc/?var-linkDate=${__value.time:date:YYYY-MM-DD}\n"
                    }
                  ]
                },
                {
                  "id": "custom.width",
                  "value": 135
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 7,
          "w": 4,
          "x": 0,
          "y": 28
        },
        "id": 43,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "WITH AlignedData AS (\n    SELECT\n        GREATEST(\n            (SELECT MIN(Date) FROM TucsonScores WHERE CarName = '투싼'),\n            (SELECT MIN(Date) FROM Scores WHERE CarName = (SELECT SimilarCar FROM Similarity WHERE BaseCar = '투싼' ORDER BY Similarity DESC LIMIT 1))\n        ) AS AlignDate\n)\n\nSELECT\n    UNIX_TIMESTAMP(ts.Date) AS time,\n    ts.CarName\nFROM\n    TucsonScores ts\nWHERE\n    ts.CarName = '투싼'\n    AND ts.Date >= (SELECT AlignDate FROM AlignedData)\nORDER BY\n    ts.Date ASC;\n",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Base",
        "transparent": true,
        "type": "table"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              }
            },
            "mappings": []
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Negative"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "red",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Positive"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "blue",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 4,
          "x": 4,
          "y": 28
        },
        "id": 19,
        "options": {
          "displayLabels": [
            "percent"
          ],
          "legend": {
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true,
            "values": []
          },
          "pieType": "pie",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT Negative, Positive FROM Dashboard.TucsonSentimentCount WHERE Date = '${linkDate}' LIMIT 50",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "Negative",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "Positive",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": [
                  {
                    "id": "9ba89ba8-4567-489a-bcde-f1917b81361d",
                    "properties": {
                      "field": "Date",
                      "fieldSrc": "field",
                      "operator": "equal",
                      "value": [
                        "${var-linkDate}"
                      ],
                      "valueError": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "date"
                      ]
                    },
                    "type": "rule"
                  }
                ],
                "id": "8b889ba8-0123-4456-b89a-b1917b7bdcdf",
                "type": "group"
              },
              "whereString": "Date = '${var-linkDate}'"
            },
            "table": "TucsonSentimentCount"
          }
        ],
        "title": "Sentiment Pie Chart",
        "transparent": true,
        "type": "piechart"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "gridPos": {
          "h": 8,
          "w": 5,
          "x": 8,
          "y": 28
        },
        "id": 31,
        "options": {
          "series_index": 0,
          "wordCloudOptions": {
            "deterministic": true,
            "enableTooltip": true,
            "fontFamily": "arial",
            "fontSizes": [
              15,
              80
            ],
            "padding": 1,
            "rotationAngles": [
              0,
              0
            ],
            "rotations": 2,
            "scale": "sqrt",
            "spiral": "archimedean",
            "transitionDuration": 800
          }
        },
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "builder",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT Frequency, Word FROM Dashboard.TucsonWordFrequency WHERE Date = '${linkDate}' LIMIT 50",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [
                    {
                      "name": "Frequency",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                },
                {
                  "parameters": [
                    {
                      "name": "Word",
                      "type": "functionParameter"
                    }
                  ],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50,
              "whereJsonTree": {
                "children1": [
                  {
                    "id": "9ba89ba8-4567-489a-bcde-f1917b81361d",
                    "properties": {
                      "field": "Date",
                      "fieldSrc": "field",
                      "operator": "equal",
                      "value": [
                        "${var-linkDate}"
                      ],
                      "valueError": [
                        null
                      ],
                      "valueSrc": [
                        "value"
                      ],
                      "valueType": [
                        "date"
                      ]
                    },
                    "type": "rule"
                  }
                ],
                "id": "8b889ba8-0123-4456-b89a-b1917b7bdcdf",
                "type": "group"
              },
              "whereString": "Date = '${var-linkDate}'"
            },
            "table": "TucsonWordFrequency"
          }
        ],
        "title": "Comment WordCloud",
        "transparent": true,
        "type": "magnesium-wordcloud-panel"
      },
      {
        "datasource": {
          "type": "mysql",
          "uid": "edvnx5lruhi4gc"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "fixedColor": "transparent",
              "mode": "fixed"
            },
            "fieldMinMax": false,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "Title"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "transparent",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "Content"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "transparent",
                    "mode": "fixed"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "URL"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "transparent",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 10,
          "x": 13,
          "y": 28
        },
        "id": 35,
        "options": {
          "infinitePan": false,
          "inlineEditing": true,
          "panZoom": false,
          "root": {
            "background": {
              "color": {
                "field": "Title",
                "fixed": "#1e1e1e"
              },
              "image": {
                "mode": "fixed"
              },
              "size": "original"
            },
            "border": {
              "color": {
                "fixed": "#444444"
              }
            },
            "constraint": {
              "horizontal": "left",
              "vertical": "top"
            },
            "elements": [
              {
                "background": {
                  "color": {
                    "field": "Title",
                    "fixed": "#333333"
                  }
                },
                "border": {
                  "color": {
                    "fixed": "#555555"
                  }
                },
                "config": {
                  "align": "left",
                  "color": {
                    "fixed": "#ffffff"
                  },
                  "size": 15,
                  "text": {
                    "field": "Title",
                    "fixed": "",
                    "mode": "field"
                  },
                  "valign": "middle"
                },
                "constraint": {
                  "horizontal": "left",
                  "vertical": "top"
                },
                "name": "Element 1",
                "placement": {
                  "height": 69,
                  "left": 144,
                  "top": -25,
                  "width": 440
                },
                "type": "metric-value"
              },
              {
                "background": {
                  "color": {
                    "field": "Content",
                    "fixed": "#333333"
                  }
                },
                "border": {
                  "color": {
                    "fixed": "#555555"
                  }
                },
                "config": {
                  "align": "left",
                  "color": {
                    "fixed": "#ffffff"
                  },
                  "size": 15,
                  "text": {
                    "field": "Content",
                    "fixed": "",
                    "mode": "field"
                  },
                  "valign": "middle"
                },
                "connections": [],
                "constraint": {
                  "horizontal": "left",
                  "vertical": "top"
                },
                "name": "Element 2",
                "placement": {
                  "height": 68,
                  "left": 144,
                  "top": 32,
                  "width": 929
                },
                "type": "metric-value"
              },
              {
                "background": {
                  "color": {
                    "field": "URL",
                    "fixed": "#333333"
                  }
                },
                "border": {
                  "color": {
                    "fixed": "#555555"
                  }
                },
                "config": {
                  "align": "left",
                  "color": {
                    "fixed": "#ffffff"
                  },
                  "size": 15,
                  "text": {
                    "field": "URL",
                    "fixed": "",
                    "mode": "field"
                  },
                  "valign": "middle"
                },
                "constraint": {
                  "horizontal": "left",
                  "vertical": "top"
                },
                "name": "Element 3",
                "placement": {
                  "height": 68,
                  "left": 144,
                  "top": 168,
                  "width": 440
                },
                "type": "metric-value"
              },
              {
                "background": {
                  "color": {
                    "fixed": "transparent"
                  }
                },
                "border": {
                  "color": {
                    "fixed": "#444444"
                  }
                },
                "config": {
                  "align": "center",
                  "color": {
                    "fixed": "#ffffff"
                  },
                  "size": 16,
                  "text": {
                    "fixed": "Title"
                  },
                  "valign": "middle"
                },
                "constraint": {
                  "horizontal": "left",
                  "vertical": "top"
                },
                "name": "Element 4",
                "placement": {
                  "height": 50,
                  "left": 12,
                  "top": -16,
                  "width": 83
                },
                "type": "text"
              },
              {
                "background": {
                  "color": {
                    "fixed": "transparent"
                  }
                },
                "border": {
                  "color": {
                    "fixed": "#444444"
                  }
                },
                "config": {
                  "align": "center",
                  "color": {
                    "fixed": "#ffffff"
                  },
                  "size": 16,
                  "text": {
                    "fixed": "Content"
                  },
                  "valign": "middle"
                },
                "constraint": {
                  "horizontal": "left",
                  "vertical": "top"
                },
                "name": "Element 5",
                "placement": {
                  "height": 50,
                  "left": 12,
                  "top": 41,
                  "width": 84
                },
                "type": "text"
              },
              {
                "background": {
                  "color": {
                    "fixed": "transparent"
                  }
                },
                "border": {
                  "color": {
                    "fixed": "#444444"
                  }
                },
                "config": {
                  "align": "center",
                  "color": {
                    "fixed": "#ffffff"
                  },
                  "size": 16,
                  "text": {
                    "fixed": "URL"
                  },
                  "valign": "middle"
                },
                "connections": [],
                "constraint": {
                  "horizontal": "left",
                  "vertical": "top"
                },
                "name": "Element 6",
                "placement": {
                  "height": 50,
                  "left": 13,
                  "top": 177,
                  "width": 83
                },
                "type": "text"
              }
            ],
            "name": "Element 1724382861573",
            "placement": {
              "height": 100,
              "left": 0,
              "rotation": 0,
              "top": 0,
              "width": 100
            },
            "type": "frame"
          },
          "showAdvancedTypes": false
        },
        "pluginVersion": "11.1.4",
        "targets": [
          {
            "dataset": "Dashboard",
            "datasource": {
              "type": "mysql",
              "uid": "edvnx5lruhi4gc"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT \n  Title, \n  Content, \n  URL\nFROM \n  Dashboard.TucsonPosts\nWHERE \n  DATE_FORMAT(DateTime, '%Y-%m-%d') = '${linkDate}'",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Hot Issue",
        "transparent": true,
        "type": "canvas"
      }
    ],
    "refresh": "",
    "schemaVersion": 39,
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "mysql",
            "uid": "edvnx5lruhi4gc"
          },
          "definition": "",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "selectedDate",
          "options": [],
          "query": "",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "mysql",
            "uid": "edvnx5lruhi4gc"
          },
          "definition": "",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "linkDate",
          "options": [],
          "query": "",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "mysql",
            "uid": "edvnx5lruhi4gc"
          },
          "definition": "",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "linkDate2",
          "options": [],
          "query": "",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "mysql",
            "uid": "edvnx5lruhi4gc"
          },
          "definition": "",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "linkCar",
          "options": [],
          "query": "",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "2017-06-17T00:00:00.000Z",
      "to": "2024-06-30T00:00:00.000Z"
    },
    "timepicker": {
      "hidden": false
    },
    "timezone": "utc",
    "title": "투싼 ICCU 결함 이슈 모니터링 시스템",
    "uid": "edvnx5lruhi4gc",
    "version": 111,
    "weekStart": ""
  }